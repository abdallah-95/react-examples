{"version":3,"sources":["images/google-logo-9808.png","components/CalGrid.jsx","components/counter.jsx","components/counters.jsx","components/Calculator.jsx","components/TicTacToe Game/TicTacToeGame.jsx","components/Dictionary.jsx","components/Menu.jsx","components/ELearning/ELearningMain.jsx","index.js"],"names":["module","exports","CalGrid","state","input","result","updateInput","e","currentInput","toString","trim","strInput","lastChar","charAt","length","checkTwosuccessiveOperators","target","value","newInput","setState","clear","evaluateInput","eval","currentOp","className","style","width","type","class","onClick","this","id","React","Component","Counter","key","props","count","listItems","handleIncreament","currentArr","push","notify","handleDecreament","alert","pop","map","i","fontSize","marginRight","onDelete","getCssClass","formatCount","renderList","cssClass","Counters","counters","TotalItemsCount","handleOnAdd","lastKey","handleOnDelete","itemsCount","splice","newTotalCount","actionName","c","Calculator","calculateWinner","squares","lines","a","b","TicTacToeGame","reset","Array","fill","xIsNext","winningStatusUpdated","increaseX","xWinningCount","x","increaseO","oWinningCount","o","UpdateWinningStatus","winner","currentSquares","color","Square","handleClick","currentValue","next","winnerColor","status","every","notNull","SvgIcon","d","renderSquare","Dictionary","newWord","word","search","wordData","getWordDefinition","searchIsClicked","menuOpened","menuState","$","ajax","async","url","success","data","thisObj","btnID","content","refs","maxHeight","scrollHeight","arr","synonymsArr","wordMeaning","meanings","btnIDCount","forEach","element","partOfSpeech","definitions","definition","example","synonyms","synonymItem","toggleCollapsible","ref","src","logo","alt","onChange","phonetic","renderWordData","Menu","toggleMenu","document","getElementById","marginLeft","closeNav","IsELMenuOpened","href","to","cursor","path","component","Index","MainMenuState","ReactDom","render"],"mappings":"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","file":"static/js/main.9933d050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google-logo-9808.ff629c02.png\";","import React from \"react\";\r\n\r\nclass CalGrid extends React.Component{\r\n\r\n    state = {\r\n        input:0,\r\n        result:0\r\n    }\r\n\r\n    updateInput = (e) => {\r\n        //debugger;\r\n        let currentInput = this.state.input.toString().trim();\r\n        let strInput = currentInput.toString();\r\n        let lastChar = strInput.charAt(strInput.length-1)\r\n\r\n        let TwosuccessiveOperatorsExist = this.checkTwosuccessiveOperators(e.target.value.trim(),lastChar);\r\n        \r\n        if(!TwosuccessiveOperatorsExist){\r\n        let newInput = currentInput != 0 ?  currentInput + e.target.value.trim() : e.target.value.trim();\r\n        this.setState({input:newInput});\r\n        }\r\n    }\r\n\r\n    clear = () => {\r\n        let newInput = 0;\r\n        this.setState({input:newInput});\r\n    }\r\n\r\n    evaluateInput = () => {\r\n        debugger;\r\n        let currentInput = this.state.input.toString().trim();\r\n\r\n        let result = eval(currentInput);\r\n\r\n        this.setState({result:result,input:result})\r\n\r\n    }\r\n\r\n    checkTwosuccessiveOperators(currentOp,lastChar){\r\n        if((lastChar == \"+\" || lastChar == \"-\" || lastChar == \"/\" || lastChar == \"*\")\r\n            &&\r\n            (currentOp  == \"+\" || currentOp == \"-\" || currentOp == \"/\" || currentOp == \"*\" ))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"m-4\" style={{width:\"205px\"}}>\r\n                    <form>\r\n                    <input type=\"button\" value=\" 1 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" 2 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" 3 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" +\" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <br/>\r\n                    <input type=\"button\" value=\" 4 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" 5 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" 6 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" - \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <br/>\r\n                    <input type=\"button\" value=\" 7 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" 8 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" 9 \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" / \" class=\"btn btn-light m-1\" onClick={this.updateInput}/>\r\n                    <br/>\r\n                    <input type=\"button\" value=\"C \" class=\"btn btn-light m-1\" onClick={this.clear}/>\r\n                    <input type=\"button\" value=\" 0 \" class=\"btn btn-light m-1\"  onClick={this.updateInput}/>\r\n                    <input type=\"button\" value=\" = \" class=\"btn btn-light m-1\" onClick={this.evaluateInput}/>\r\n                    <input type=\"button\" value=\" * \" class=\"btn btn-light\" onClick={this.updateInput}/>\r\n                    <br/><br/>\r\n                    <input type=\"text\" class=\"form-control\" id=\"input\" value={this.state.input}></input>\r\n                    </form>\r\n                </div>              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalGrid;","import React from \"react\";\r\n\r\nclass Counter extends React.Component {\r\n  state = {\r\n    key:this.props.key,\r\n    count: this.props.value,\r\n    listItems: []\r\n  };\r\n  // formatCount() {\r\n  //   return this.state.listItems.length === 0\r\n  //     ? \"Zero\"\r\n  //     : this.state.listItems.length;\r\n  // }\r\n\r\n  formatCount() {\r\n    return this.state.count === 0\r\n      ? \"Zero\"\r\n      : this.state.count;\r\n  }\r\n\r\n  renderList() {\r\n    if (this.state.listItems.length === 0) return <p>There are no items</p>;\r\n    else\r\n      return (\r\n        <ul>\r\n          {this.state.listItems.map(i => (\r\n            <li key={i}>{i}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n  }\r\n\r\n  handleIncreament = () => {\r\n    let currentArr = this.state.listItems;\r\n\r\n    currentArr.push(\"Item\");\r\n    this.setState({listItems:currentArr,count:this.state.count+1})\r\n\r\n    this.props.notify('Add');\r\n  }\r\n\r\n  handleDecreament = () => {\r\n    let currentArr = this.state.listItems;\r\n\r\n    let currentCount = this.state.count;\r\n    \r\n    if(currentCount === 0){\r\n      alert(\"You can't decrease more!\");\r\n    }\r\n    else{\r\n    currentArr.pop();\r\n    this.setState({listItems:currentArr,count:this.state.count-1})\r\n    }\r\n\r\n    this.props.notify('Decreament');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label style={{fontSize:'30px','font-weight':'bold',marginRight:'50px'}}>Counter Component #{this.props.id}</label> \r\n        <button className=\"btn btn-danger\" onClick={() => this.props.onDelete(this.props.id,this.state.count)}>Delete</button>\r\n        <br/>\r\n        <span className={this.getCssClass()}>{this.formatCount()}</span>\r\n        <button className=\"btn btn-light m-2\" onClick={this.handleIncreament}>Increment</button>\r\n        <button className=\"btn btn-light\" onClick={this.handleDecreament}>Decreament</button>\r\n        {this.renderList()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getCssClass() {\r\n    let cssClass = \"badge m-2 \";\r\n    cssClass += this.state.count === 0 ? \"badge-warning\" : \"badge-primary\";\r\n    return cssClass;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\nimport Counter from './counter';\r\n\r\n\r\nclass Counters extends React.Component{\r\n\r\n    state = {\r\n        counters : [\r\n            // {key:1,value:0},\r\n            // {key:2,value:0}\r\n        ],\r\n        TotalItemsCount : 0\r\n    };\r\n\r\n    handleOnAdd = () => {\r\n        let Counters = this.state.counters;\r\n        let lastKey = Counters.length === 0 ? 0 : Counters[Counters.length-1].key;\r\n        Counters.push({key:lastKey+1,value:0});\r\n\r\n        this.setState({counters:Counters})\r\n    }\r\n\r\n    handleOnDelete = (id,itemsCount) => {\r\n        let Counters = this.state.counters;\r\n        \r\n        for(let i = 0 ; i<Counters.length; i++){\r\n            if (Counters[i].key == id){\r\n                Counters.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        let newTotalCount = this.state.TotalItemsCount - itemsCount;\r\n        this.setState({counters:Counters,TotalItemsCount:newTotalCount})\r\n    }\r\n\r\n    notify = (actionName) => {\r\n        let newTotalCount;\r\n\r\n        if(actionName == 'Add')\r\n             newTotalCount = this.state.TotalItemsCount + 1;   \r\n        else\r\n             newTotalCount = this.state.TotalItemsCount > 0 ? this.state.TotalItemsCount - 1 : 0;\r\n\r\n        this.setState({TotalItemsCount:newTotalCount});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <label style={{fontSize:'50px','font-weight':'bold',marginRight:'170px'}}>Counters</label>\r\n                <button className=\"btn btn-primary lg\" onClick={this.handleOnAdd}>Add</button>\r\n                <br/>\r\n                <label style={{fontSize:'20px','font-weight':'bold',marginRight:'170px'}}>Total Items Count:{this.state.TotalItemsCount}</label>\r\n                {\r\n                this.state.counters.map(c => <Counter key ={c.key} id={c.key} value={c.value} onDelete={this.handleOnDelete} notify={this.notify}/>)       \r\n                }</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;","import React from \"react\";\r\nimport CalGrid from './CalGrid';\r\n\r\nclass Calculator extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <CalGrid />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport './styles.css'; \r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\n\r\nclass TicTacToeGame extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          squares: Array(9).fill(null),\r\n          xIsNext: true,\r\n          x:0,\r\n          o:0,\r\n          winningStatusUpdated:false\r\n        };\r\n      }\r\n\r\n    handleClick(i){\r\n        let currentSquares = this.state.squares;\r\n\r\n        if (calculateWinner(currentSquares) || currentSquares[i]) {\r\n            return;\r\n        }\r\n\r\n        currentSquares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n        this.setState({\r\n            squares: currentSquares,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n        debugger;\r\n        this.UpdateWinningStatus();\r\n    }\r\n\r\n    Square(props, className) {\r\n        return (\r\n          <td style={props.value == \"X\" ? {color:'blue'} : {color:'red'}} className={props.className} onClick={props.onClick}> \r\n            {props.value}\r\n          </td>\r\n        );\r\n    }\r\n\r\n    renderSquare(i, className){\r\n        return(<this.Square className={className}\r\n                       value={this.state.squares[i]}\r\n                       onClick={() => this.handleClick(i)} />);\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ \r\n          squares: Array(9).fill(null),\r\n          xIsNext: true,\r\n          winningStatusUpdated: !this.state.winningStatusUpdated\r\n        })\r\n    }\r\n\r\n    increaseX = () =>{\r\n      let xWinningCount = this.state.x;\r\n      this.setState({x:xWinningCount+1})\r\n    }\r\n      \r\n    increaseO = () =>{\r\n      let oWinningCount = this.state.o;\r\n      this.setState({o:oWinningCount+1});\r\n    }\r\n\r\n    notNull(currentValue) {\r\n      return currentValue != null;\r\n    }\r\n\r\n    UpdateWinningStatus = () => {\r\n      let winner = calculateWinner(this.state.squares);\r\n\r\n      if(winner && !this.state.winningStatusUpdated){\r\n        debugger;\r\n        if(winner == \"X\")\r\n          this.increaseX();\r\n        else\r\n          this.increaseO();  \r\n\r\n          this.setState({winningStatusUpdated: !this.state.winningStatusUpdated})\r\n      }\r\n    }\r\n    \r\n\r\n    render() {\r\n        let winner = calculateWinner(this.state.squares)\r\n        let next = this.state.xIsNext ? \"X\" : \"O\";\r\n        let color = this.state.xIsNext ? \"blue\" : \"red\";\r\n\r\n        let winnerColor = winner == \"X\" ? \"blue\" : \"red\";\r\n        let status = winner ? <label style={{color:winnerColor}}>Winner: {winner} </label> : <label>Next player: <span style={{color:color}}>{next}</span></label>;\r\n\r\n        if(winner == null && this.state.squares.every(this.notNull)){\r\n          status = <label>Game Over!</label>;\r\n        }\r\n\r\n        return(\r\n            <div className=\"m-5\">\r\n              <div>\r\n                <label>Tic-Tac-Toe</label>\r\n              \r\n              <button className=\"btn btn-primary\" id=\"reset\" onClick={this.reset}>Reset\r\n                <SvgIcon id=\"refresh\">\r\n                  <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"/>\r\n                </SvgIcon>\r\n              </button>\r\n\r\n              </div>\r\n                <div>\r\n                    {status}\r\n                </div>\r\n                <br/>\r\n                <table>\r\n                    <tr>\r\n                        {this.renderSquare(0)}\r\n                        {this.renderSquare(1,\"vert\")}\r\n                        {this.renderSquare(2)}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.renderSquare(3,\"hori\")}\r\n                        {this.renderSquare(4,\"hori vert\")}\r\n                        {this.renderSquare(5,\"hori\")}\r\n                    </tr>\r\n                    <tr>\r\n                        {this.renderSquare(6)}\r\n                        {this.renderSquare(7,\"vert\")}\r\n                        {this.renderSquare(8)}\r\n                    </tr>\r\n                </table>\r\n                <br/>\r\n                <div>\r\n                  <div>\r\n                    <label style={{color:\"blue\"}}>X: {this.state.x}</label>\r\n                  </div>\r\n                  <div>\r\n                  <label style={{color:\"red\"}}>O: {this.state.o}</label>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\nexport default TicTacToeGame;\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/dictionaryStyles.css';\r\nimport $ from 'jquery'; \r\nimport logo from '../images/google-logo-9808.png';\r\n\r\n\r\nclass Dictionary extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchIsClicked: false,\r\n            word: '',\r\n            wordData: null,\r\n            menuOpened: this.props.menuState\r\n        } \r\n    }\r\n\r\n\r\n    updateInput = (e) => {\r\n        let newWord = e.target.value;\r\n        this.setState({word: newWord})\r\n    }\r\n\r\n    search = () => {\r\n        let wordData = this.getWordDefinition(this.state.word);\r\n\r\n        this.setState({searchIsClicked: true,\r\n                       wordData:wordData\r\n        });\r\n    }\r\n\r\n    getWordDefinition(word) {\r\n        let wordData = null;\r\n        $.ajax({\r\n            type: \"GET\",\r\n            async: false,\r\n            url: \"https://api.dictionaryapi.dev/api/v2/entries/en/\"+word.trim(),\r\n            success: function(data) {\r\n                wordData = data[0];\r\n            }\r\n          });\r\n\r\n        // let wordData = await fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en/\"+word.trim(),{\r\n        //     method:\"Get\"\r\n        //   }).then(response => response.json())\r\n\r\n          return wordData; \r\n    }\r\n\r\n    toggleCollapsible(thisObj,btnID){\r\n        debugger;\r\n        let content = thisObj.refs[\"content\" + btnID];\r\n        if (content.style.maxHeight){\r\n            content.style.maxHeight = null;\r\n        } \r\n        else {\r\n            content.style.maxHeight = content.scrollHeight + \"px\";\r\n        } \r\n    }\r\n\r\n    renderWordData(thisObj){\r\ndebugger;\r\n        // let arr = [];\r\n        // Object.keys(this.state.wordData.meaning).forEach(function(key) {\r\n        //     arr.push(<h5 className=\"m-3\">{key}</h5>) \r\n        //     arr.push(<h6 className=\"m-5\">{key.definition}</h6>) \r\n        // });\r\n        // return arr;\r\n\r\n        let arr = [];\r\n        let synonymsArr = [];\r\n        let wordMeaning = this.state.wordData.meanings;\r\n        let btnIDCount = 0;\r\n\r\n                wordMeaning.forEach(element => {\r\n                    arr.push(<h5 className=\"meaning m-3\">{element.partOfSpeech}</h5>)\r\n\r\n                    arr.push(<div className=\"m-4\"><li className=\"definition\">{element.definitions[0].definition}</li>                    \r\n                            {element.definitions[0].example == null ?   <div className=\"example m-4\"></div>: <div className=\"example m-4\">Example: {element.definitions[0].example}</div>}\r\n                            \r\n                    </div>)\r\n                    \r\n                    if(element.definitions[0].synonyms != null){\r\n                        synonymsArr = [];\r\n                        element.definitions[0].synonyms.forEach((synonymItem)=> {\r\n                            synonymsArr.push(<li>{synonymItem}</li>)\r\n                        });\r\n                    }\r\n\r\n\r\n                    arr.push(<div>\r\n                        <button id={++btnIDCount} class=\"collapsible btn-info m-2\" onClick={(e) => {thisObj.toggleCollapsible(thisObj, e.target.id)}}>Synonyms</button>\r\n                        <div class=\"content m-2\" ref={\"content\"+btnIDCount}>\r\n                            {\r\n                            element.definitions[0].synonyms != null ?\r\n                            <ul className=\"synonym\">  \r\n                            {synonymsArr}\r\n                            </ul>\r\n                            :<div></div>\r\n                            }\r\n                        </div>\r\n                    </div>)\r\n             \r\n                arr.push(<hr className=\"hl\"/>)\r\n                    \r\n                });\r\n\r\n\r\n\r\n            //     Object.keys(wordMeaning).forEach(function(key) {\r\n                \r\n            //     arr.push(<h5 className=\"meaning m-3\">{key}</h5>)\r\n                \r\n            //     wordMeaning[key].forEach(function(item) {\r\n            //         arr.push(<div className=\"m-4\"><li className=\"definition\">{item.definition}</li>                    \r\n            //                 {item.example == null ?   <div className=\"example m-4\"></div>: <div className=\"example m-4\">Example: {item.example}</div>}\r\n                            \r\n            //         </div>)\r\n            //         debugger;\r\n\r\n            //         if(item.synonyms != null){\r\n            //             synonymsArr = [];\r\n            //             item.synonyms.forEach((synonymItem)=> {\r\n            //                 synonymsArr.push(<li>{synonymItem}</li>)\r\n            //             });\r\n            //         }\r\n            //         arr.push(<div>\r\n            //             <button id={++btnIDCount} class=\"collapsible btn-info m-2\" onClick={(e) => {thisObj.toggleCollapsible(thisObj, e.target.id)}}>Synonyms</button>\r\n            //             <div class=\"content m-2\" ref={\"content\"+btnIDCount}>\r\n            //                 {\r\n            //                 item.synonyms != null ?\r\n            //                 <ul className=\"synonym\">  \r\n            //                 {synonymsArr}\r\n            //                 </ul>\r\n            //                 :<div></div>\r\n            //                 }\r\n            //             </div>\r\n            //         </div>)\r\n            //         })\r\n            //     arr.push(<hr className=\"hl\"/>)\r\n            //   })\r\n            \r\n        return arr;\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {/* <img id=\"img1\" src=\"https://s3.eu-central-1.amazonaws.com/centaur-wp/designweek/prod/content/uploads/2014/01/Oxford-Dictionaries-with-strapline-1002x273.png\" alt=\"Oxford Dictionaries\"/> */}\r\n                    {/* <img id=\"img2\" src=\"https://www.stickpng.com/assets/images/5a951939c4ffc33e8c148af2.png\" alt=\"Oxford Dictionaries\"/>\r\n                    <h1 id=\"h1\">Google Dictionary</h1> */}\r\n\r\n                    {/* <img id=\"img2\" src=\"https://www.stickpng.com/assets/images/5a951939c4ffc33e8c148af2.png\" alt=\"Oxford Dictionaries\"/>\r\n                    <h1 id=\"h1\">Google Dictionary</h1> */}\r\n\r\n                    \r\n                </div>\r\n\r\n\r\n                {/* <form>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n                    </div>\r\n                    \r\n                </form> */}\r\n\r\n                {/* <div class=\"header\">\r\n                    <img src=\"https://www.stickpng.com/assets/images/5a951939c4ffc33e8c148af2.png\" alt=\"logo\" />         \r\n                    <h1>oogle Dictionary</h1>\r\n                </div> */}\r\n\r\n\r\n                \r\n                {\r\n                (this.state.menuOpened ?\r\n                \r\n                <div class=\"headerMenuOpened\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>Dictionary</h1>\r\n                </div>  \r\n                     \r\n                :\r\n\r\n                <div class=\"header\">\r\n                    <img src={logo} alt=\"logo\" />         \r\n                    <h1>oogle Dictionary</h1>\r\n                </div>\r\n \r\n                )}\r\n\r\n                    <br/>\r\n                    <br/>\r\n\r\n                <form>\r\n                <div className=\"form-group\">\r\n                    <input id=\"i1\" type=\"text\" className=\"form-control\" onChange={this.updateInput}/>\r\n                </div>\r\n                <button id=\"btn1\" type=\"button\" className=\"btn btn-primary\" onClick={this.search}>Search</button>\r\n                </form>\r\n                {\r\n                this.state.searchIsClicked & this.state.wordData != null?\r\n                    <div className=\"m-5\">\r\n                        <h1 style={{fontSize:\"60px\"}}>{this.state.wordData.word}</h1>\r\n                        <h6 class=\"form-text text-muted m-2\">{this.state.wordData.phonetic}</h6>\r\n                        <hr className=\"hl\"/>\r\n                        {\r\n                            this.renderWordData(this)\r\n                        }\r\n                    </div>\r\n                    :\r\n                    this.state.wordData == null && this.state.searchIsClicked?\r\n                    \r\n                    <div className=\"m-5\">\r\n                    <h1>No Result!</h1>\r\n                    </div>\r\n                    \r\n                    :\r\n                    <div className=\"m-5\">\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dictionary;","import React from 'react';\r\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport '../css/styles.css';\r\n\r\n\r\nimport Counters from './counters';\r\nimport Calculator  from './Calculator';\r\nimport TicTacToeGame from './TicTacToe Game/TicTacToeGame';\r\nimport Dictionary from './Dictionary';\r\nimport ELearningMain from './ELearning/ELearningMain';\r\n\r\nclass Menu extends React.Component{\r\n\r\n    state = {\r\n        menuOpened:false,\r\n    }\r\n    toggleMenu = () => {\r\n        let currentMenuState = this.state.menuOpened;\r\n\r\n        if(currentMenuState === false){\r\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n        document.getElementById(\"main\").style.marginLeft = \"250px\";\r\n        \r\n        this.setState({menuOpened:true});\r\n        }\r\n        else{        \r\n            this.closeNav();\r\n            this.setState({menuOpened:false});\r\n        }\r\n      }\r\n      \r\n    closeNav = () => {\r\n        debugger;\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";      \r\n        document.getElementById(\"main\").style.marginLeft = !this.state.IsELMenuOpened ? \"0\" : \"250px\";\r\n    }\r\n\r\n    Index() {\r\n        return null;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <div>\r\n                    <div id=\"mySidenav\" className=\"sidenav\">\r\n                        <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.closeNav}>&times;</a>                      \r\n                        <Link to=\"/\">Home</Link>                        \r\n                        <Link to=\"/Calculator\">Calculator</Link>\r\n                        <Link to=\"/Counters\">Counters</Link>\r\n                        <Link to=\"/TicTacToe\">Tic-Tac-Toe</Link>\r\n                        <Link to=\"/GoogleDictionary\">Google Dictionary</Link>\r\n                        {/* <Link to=\"/E-Learning\">E-Learning</Link> */}\r\n                        </div>\r\n\r\n                        <div id=\"main\">\r\n                        <h2>React Examples</h2>\r\n                        <span style={{fontSize:\"30px\",cursor:\"pointer\"}} onClick={this.toggleMenu}>&#9776; open</span>\r\n                        <div id=\"content\">\r\n                            <Route path=\"/\"  component={this.Index} />\r\n                            <Route path=\"/Calculator\" component={Calculator} />\r\n                            <Route path=\"/Counters\" component={Counters} />\r\n                            <Route path=\"/TicTacToe\" component={TicTacToeGame} />\r\n                            {/* <Route path=\"/GoogleDictionary\" component={Dictionary} /> */}\r\n                            <Route path=\"/GoogleDictionary\" component={() => <Dictionary MainMenuState={this.state.menuOpened}/>} />\r\n                            {/* <Route path=\"/E-Learning\" component={() => <ELearningMain handleELMenuStateChange={this.handleELMenuStateChange}/>} /> */}\r\n                            {/* <Route path=\"/E-Learning\" component={ELearningMain} /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport Counters from '../counters';\r\nimport Calculator  from '../Calculator';\r\nimport TicTacToeGame from '../TicTacToe Game/TicTacToeGame';\r\nimport Dictionary from '../Dictionary';\r\n\r\nimport './elstyles.css';\r\n\r\nclass ELearningMain extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.ELMenuState = props.handleELMenuStateChange\r\n\r\n        this.state = {\r\n            menuOpened:false\r\n        }\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        debugger;\r\n        let currentMenuState = this.state.menuOpened;\r\n\r\n        if(currentMenuState === false){\r\n        document.getElementById(\"ELSideNav\").style.width = \"250px\";\r\n        document.getElementById(\"ELmain\").style.marginLeft = \"250px\";\r\n        \r\n        this.setState({menuOpened:true});\r\n        \r\n        }\r\n        else{        \r\n            this.closeNav();\r\n            this.setState({menuOpened:false});\r\n        }\r\n        this.ELMenuState(this.state.menuOpened);\r\n    }\r\n      \r\n    closeNav() {\r\n        document.getElementById(\"ELSideNav\").style.width = \"0\";\r\n        document.getElementById(\"ELmain\").style.marginLeft= \"0\";\r\n    }\r\n\r\n    Index() {\r\n        return null;\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <div>\r\n                    <div id=\"ELSideNav\" className=\"elsidenav\">\r\n                        <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.closeNav}>&times;</a>                      \r\n                        <Link to=\"/\">Home</Link>                        \r\n                        <Link to=\"/Calculator\">Calculator</Link>\r\n                        <Link to=\"/Counters\">Counters</Link>\r\n                        <Link to=\"/TicTacToe\">Tic-Tac-Toe</Link>\r\n                        <Link to=\"/GoogleDictionary\">Google Dictionary</Link>\r\n                        </div>\r\n\r\n                        <div id=\"ELmain\">\r\n                        <h2>E-Learning</h2>\r\n                        <span style={{fontSize:\"30px\",cursor:\"pointer\"}} onClick={this.toggleMenu}>&#9776; open</span>\r\n                        <div id=\"content\">\r\n                            <Route path=\"/\"  component={this.Index} />\r\n                            <Route path=\"/Calculator\" component={Calculator} />\r\n                            <Route path=\"/Counters\" component={Counters} />\r\n                            <Route path=\"/TicTacToe\" component={TicTacToeGame} />\r\n                            {/* <Route path=\"/GoogleDictionary\" component={Dictionary} /> */}\r\n                            <Route path=\"/GoogleDictionary\" component={() => <Dictionary menuState={this.state.menuOpened}/>} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ELearningMain","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/TicTacToe Game/styles.css'; \r\n\r\nimport Counters from './components/counters';\r\nimport Calculator  from './components/Calculator';\r\nimport TicTacToeGame from './components/TicTacToe Game/TicTacToeGame';\r\nimport Menu from './components/Menu';\r\nimport Dictionary from './components/Dictionary';\r\n\r\n\r\n//ReactDom.render(<Counter />,document.getElementById('root'));\r\n\r\n//ReactDom.render(<Counters />,document.getElementById('root'));\r\n\r\n//ReactDom.render(<TicTacToeGame />,document.getElementById('root'));\r\n\r\n//ReactDom.render(<Dictionary />,document.getElementById('root'));\r\n\r\nReactDom.render(<Menu />,document.getElementById('root'));\r\n"],"sourceRoot":""}